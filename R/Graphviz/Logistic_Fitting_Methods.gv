digraph {
  forcelabels = true;
  rankdir = TB;
  fontsize = 16
  fontname = Helvetica
  node [shape = oval, fontname = Helvetica, style = filled];
  a01 [label = "Simulation Model Parameters \n (Intercept, Betas, Sigmas)",
    shape = polygon, style = filled, fillcolor = Khaki, fixedsize = true,
    margin = 0, skew = 0.1, width = 3.25];
  a02 [label = "Input GIS Layers", shape = polygon, style = filled,
    fillcolor = Khaki, fixedsize = true, margin = 0, skew = 0.1, width = 2]
  b01 [label = "Calculate Probability Surface\n using Model Coefficients with Scaled Layers",
    shape = rectangle,fillcolor = Thistle];
  b02 [label = "Gaussian-Kernel\n Smoothing Procedure", shape = rectangle,
    fillcolor = Thistle];
  c01 [label = '\‘True\’ Probability\n Surface', shape = hexagon,
    fillcolor = Gold, fixedsize = true, width = 2.5, height = .75]
  c02 [label = "GIS Layers at\n Multiple Scales", shape = hexagon,
    fillcolor = Gold, margin = .01]
  d01 [label = "Sample \‘True\’ Probability Surface\nto Generate Present/Absent Points",
    shape = rectangle, fillcolor = Thistle, fixedsize = true, width = 3.5, height = .6]
  d02 [style = invis]
  e01 [label = "Present/Absent\nPoint Locations", shape = hexagon, fillcolor = Gold,
    margin = .01]
  e02 [style = invis]
  f01 [label = "Exhaustive Search \n Model-Fitting Method",
    style = filled, fillcolor = "green", shape = "rectangle", margin = .1]
  f02 [label = "Genetic Algorithm Optimization\n Model-Fitting Method",
    style = filled, fillcolor = "green", shape = "rectangle", fixedsize = true,
    width = 3, height = .65]
  g01 [label =  "All-Scale Combinations\n Best Fit Model", style = filled,
    fillcolor = DeepSkyBlue, shape = oval, fixedsize = true,
    width = 2.75, height = .85]
  g02 [label = "Optimization\n Model Fit", style = filled,
    fillcolor = DeepSkyBlue, shape = oval]
  subgraph cluster_0 {
    rankdir = TB;
    label = "Multi-scale Model Fitting Procedure Overview"
    fontsize = "16"
      subgraph cluster_01 {
        label = "Grand-Child one";
         a01, a02
         edge[style = invis];
         a01 -> a02
      }
      {
        rank=same;
        node[];
        a01, a02
      }
      {
        rank=same;
        node[];
        b01, b02
      }
            {
        rank=same;
        node[];
        c01, c02
    }

      {
        rank=same;
        node[];
        d01, d02
    }
    {
        rank=same;
        node[];
        e01, e02
    }
    {
        rank=same;
        node[];
        f01, f02
        edge[color = red, constraint = false];
    }
    {
        rank=same;
        node[];
        g01;g02
        edge[color = red, constraint = false];
    }

    edge[color = black, weight = 100];
      a01->b01;
      a02->b02;
      b01->c01;
      b02->c02;
      c01->d01;
      d01->e01;
      e01->f01;
      e01->f02;
      f01->g01;
      f02->g02;

    edge[color = darkgray, minlen = 0, constraint = true, style = dashed,
      weight = 5];
      c02->b01;
      c02->f01;
      c02->f02;

    edge[style=invis];
    node[group=left];
    a01 -> b01 -> c01 -> d01 -> e01 -> g01;

    edge[style=invis, weight = 3];
    node[group=right];
    a02 -> b02 -> c02 -> d02 -> e02 -> g02;

    edge[style=invis, weight = 3];
    node[group=right];
    d01 -> f01;

    }
}
